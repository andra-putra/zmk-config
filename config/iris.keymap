/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_move.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    combos {
        compatible = "zmk,combos";

        togLyrConf {
            bindings = <&tog 3>;
            key-positions = <0 52 53 11>;
        };

        toNumpad {
            bindings = <&tog 2>;
            key-positions = <11 53>;
        };
    };

    behaviors {
        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mod";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
        };

        sticky_key_release: sk_cust {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_RELEASE";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                            | GUI  | LOWER|  SPACE |  | ENTER | RAISE|  ALT  |

            bindings = <
&kp GRAVE                         &kp N1  &kp N2  &kp N3          &kp N4          &kp N5                                                                   &kp N6     &kp N7           &kp N8           &kp N9   &kp N0    &kp BACKSLASH
&kp ESC                           &kp Q   &kp W   &kp E           &kp R           &kp T                                                                    &kp Y      &kp U            &kp I            &kp O    &kp P     &kp MINUS
&sticky_key_release LEFT_CONTROL  &kp A   &kp S   &hm LEFT_ALT D  &hm LEFT_GUI F  &kp G                                                                    &kp H      &hm RIGHT_GUI J  &hm RIGHT_ALT K  &kp L    &kp SEMI  &kp SQT
&kp CAPS                          &kp Z   &kp X   &kp C           &kp V           &kp B                           &kp INT_KATAKANAHIRAGANA  &kp LG(SPACE)  &kp N      &kp M            &kp COMMA        &kp DOT  &kp FSLH  &kp EQUAL
                                                                  &kp LGUI        &sticky_key_release LEFT_SHIFT  &lt 1 BACKSPACE           &lt 1 ENTER    &kp SPACE  &kp TAB
            >;
        };

        utility {
            bindings = <
&trans   &kp F1  &kp F2            &kp F3          &kp F4             &kp F5                          &kp F6        &kp F7        &kp F8            &kp F9            &kp F10            &kp F11
&kp DEL  &trans  &msc SCROLL_LEFT  &mmv MOVE_UP    &msc SCROLL_RIGHT  &msc MOVE_UP                    &trans        &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT        &trans             &kp F12
&trans   &trans  &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &msc MOVE_DOWN                  &kp LEFT      &kp DOWN      &kp UP_ARROW      &kp RIGHT         &trans             &trans
&trans   &trans  &trans            &trans          &kp K_BACK         &kp K_FORWARD   &trans  &trans  &kp C_VOL_DN  &kp C_VOL_UP  &kp K_MUTE        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
                                                   &mkp MB2           &mkp MB1        &trans  &trans  &trans        &trans
            >;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &kp HOME       &kp KP_NUMLOCK   &kp SLASH        &kp ASTERISK     &kp MINUS     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &kp PAGE_UP    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS      &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &kp PAGE_DOWN  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_COMMA  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp INSERT     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT    &trans
                                &trans  &trans  &trans  &trans  &trans         &kp KP_NUMBER_0
            >;
        };

        layer_3 {
            bindings = <
&trans          &bt BT_NXT  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &trans
&bt BT_CLR_ALL  &none       &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&bt BT_CLR      &none       &kp B  &kp B  &kp B  &none                  &none  &kp T  &kp T  &kp T  &none  &none
&none           &none       &none  &none  &none  &none  &none   &none   &none  &none  &none  &none  &none  &none
                                          &none  &none  &trans  &trans  &none  &none
            >;
        };
    };
};
